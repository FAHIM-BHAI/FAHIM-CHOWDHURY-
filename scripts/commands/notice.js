module.exports.config = {
  name: "notice",
  version: "1.0.0",
  hasPermssion: 1, // рж╢рзБржзрзБ ржмржЯ ржПржбржорж┐ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ
  credits: "Bondo",
  description: "Broadcast a message to all groups",
  commandCategory: "system",
  usages: "[message]",
  cooldowns: 5
};

module.exports.run = async function ({ api, event, args }) {
  const adminUIDs = ["100091365612246"]; // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ UID ржмрж╕рж╛ржУ

  if (!adminUIDs.includes(event.senderID)) {
    return api.sendMessage("тЭМ ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ рж╢рзБржзрзБржорж╛рждрзНрж░ ржмржЯ ржЕрзНржпрж╛ржбржорж┐ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ!", event.threadID, event.messageID);
  }

  const msg = args.join(" ");
  if (!msg) {
    return api.sendMessage("тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржорзЗрж╕рзЗржЬ рж▓рж┐ржЦрзЛ!\nржмрзНржпржмрж╣рж╛рж░: notice [рждрзЛржорж╛рж░ ржирзЛржЯрж┐рж╢]", event.threadID, event.messageID);
  }

  const threads = await api.getThreadList(100, null, ["INBOX"]);
  const groupThreads = threads.filter(thread => thread.isGroup);

  let success = 0;
  let fail = 0;

  for (const thread of groupThreads) {
    try {
      await api.sendMessage(`ЁЯУв [NOTICE FROM ADMIN]\n\n${msg}`, thread.threadID);
      success++;
    } catch (err) {
      fail++;
    }
  }

  return api.sendMessage(`тЬЕ Notice ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ ${success}ржЯрж┐ ржЧрзНрж░рзБржкрзЗ\nтЭМ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ ${fail}ржЯрж┐`, event.threadID);
};
